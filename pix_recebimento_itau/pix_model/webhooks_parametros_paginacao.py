# coding: utf-8

"""
    pix_recebimentos

    APis Pix Recebimentos para Clientes (regulatórias).   # noqa: E501

    OpenAPI spec version: 1.40.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class WebhooksParametrosPaginacao(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'pagina_atual': 'float',
        'quantidade_total_de_itens': 'float',
        'itens_por_pagina': 'float',
        'quantidade_de_paginas': 'float'
    }

    attribute_map = {
        'pagina_atual': 'paginaAtual',
        'quantidade_total_de_itens': 'quantidadeTotalDeItens',
        'itens_por_pagina': 'itensPorPagina',
        'quantidade_de_paginas': 'quantidadeDePaginas'
    }

    def __init__(self, pagina_atual=None, quantidade_total_de_itens=None, itens_por_pagina=None, quantidade_de_paginas=None):  # noqa: E501
        """WebhooksParametrosPaginacao - a model defined in Swagger"""  # noqa: E501

        self._pagina_atual = None
        self._quantidade_total_de_itens = None
        self._itens_por_pagina = None
        self._quantidade_de_paginas = None
        self.discriminator = None

        if pagina_atual is not None:
            self.pagina_atual = pagina_atual
        if quantidade_total_de_itens is not None:
            self.quantidade_total_de_itens = quantidade_total_de_itens
        if itens_por_pagina is not None:
            self.itens_por_pagina = itens_por_pagina
        if quantidade_de_paginas is not None:
            self.quantidade_de_paginas = quantidade_de_paginas

    @property
    def pagina_atual(self):
        """Gets the pagina_atual of this WebhooksParametrosPaginacao.  # noqa: E501

        Numero da Página que deseja realizar o acesso, valor considerado por default 0  # noqa: E501

        :return: The pagina_atual of this WebhooksParametrosPaginacao.  # noqa: E501
        :rtype: float
        """
        return self._pagina_atual

    @pagina_atual.setter
    def pagina_atual(self, pagina_atual):
        """Sets the pagina_atual of this WebhooksParametrosPaginacao.

        Numero da Página que deseja realizar o acesso, valor considerado por default 0  # noqa: E501

        :param pagina_atual: The pagina_atual of this WebhooksParametrosPaginacao.  # noqa: E501
        :type: float
        """

        self._pagina_atual = pagina_atual

    @property
    def quantidade_total_de_itens(self):
        """Gets the quantidade_total_de_itens of this WebhooksParametrosPaginacao.  # noqa: E501

        Quantidade total de itens consultados  # noqa: E501

        :return: The quantidade_total_de_itens of this WebhooksParametrosPaginacao.  # noqa: E501
        :rtype: float
        """
        return self._quantidade_total_de_itens

    @quantidade_total_de_itens.setter
    def quantidade_total_de_itens(self, quantidade_total_de_itens):
        """Sets the quantidade_total_de_itens of this WebhooksParametrosPaginacao.

        Quantidade total de itens consultados  # noqa: E501

        :param quantidade_total_de_itens: The quantidade_total_de_itens of this WebhooksParametrosPaginacao.  # noqa: E501
        :type: float
        """

        self._quantidade_total_de_itens = quantidade_total_de_itens

    @property
    def itens_por_pagina(self):
        """Gets the itens_por_pagina of this WebhooksParametrosPaginacao.  # noqa: E501

        Quantidade de ocorrência retornadas por pagina, valor por default 100  # noqa: E501

        :return: The itens_por_pagina of this WebhooksParametrosPaginacao.  # noqa: E501
        :rtype: float
        """
        return self._itens_por_pagina

    @itens_por_pagina.setter
    def itens_por_pagina(self, itens_por_pagina):
        """Sets the itens_por_pagina of this WebhooksParametrosPaginacao.

        Quantidade de ocorrência retornadas por pagina, valor por default 100  # noqa: E501

        :param itens_por_pagina: The itens_por_pagina of this WebhooksParametrosPaginacao.  # noqa: E501
        :type: float
        """

        self._itens_por_pagina = itens_por_pagina

    @property
    def quantidade_de_paginas(self):
        """Gets the quantidade_de_paginas of this WebhooksParametrosPaginacao.  # noqa: E501

        Quantidade de páginas disponíveis para consulta.  # noqa: E501

        :return: The quantidade_de_paginas of this WebhooksParametrosPaginacao.  # noqa: E501
        :rtype: float
        """
        return self._quantidade_de_paginas

    @quantidade_de_paginas.setter
    def quantidade_de_paginas(self, quantidade_de_paginas):
        """Sets the quantidade_de_paginas of this WebhooksParametrosPaginacao.

        Quantidade de páginas disponíveis para consulta.  # noqa: E501

        :param quantidade_de_paginas: The quantidade_de_paginas of this WebhooksParametrosPaginacao.  # noqa: E501
        :type: float
        """

        self._quantidade_de_paginas = quantidade_de_paginas

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(WebhooksParametrosPaginacao, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, WebhooksParametrosPaginacao):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
